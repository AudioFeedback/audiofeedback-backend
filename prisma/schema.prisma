// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  title         String
  genre         String
  authorId      Int
  trackVersions TrackVersion[]
  reviewers     User[]         @relation("reviewer")
  author        User           @relation(fields: [authorId], references: [id])
}

model TrackVersion {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  trackId       Int
  versionNumber Int
  description   String
  guid          String
  filetype      String
  duration      Int
  feedback      Feedback[]
  track         Track      @relation(fields: [trackId], references: [id])
}

model User {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  username   String     @unique
  firstname  String
  lastname   String
  password   String
  roles      Role[]
  tracks     Track[]
  feedback   Feedback[]
  reviewable Track[]    @relation("reviewer")
}

model Feedback {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  isPublished Boolean      @default(false)
  timestamp   Float?     
  rating      Boolean
  comment     String
  userId      Int
  trackVersionId     Int
  user        User         @relation(fields: [userId], references: [id])
  trackVersion       TrackVersion @relation(fields: [trackVersionId], references: [id])
}

enum Role {
  FEEDBACKGEVER
  MUZIEKPRODUCER
  ADMIN
}
